version: '3.8'

networks:
  mongo_network:
    name: mongo_network

volumes:
  mongo_data: {}

services:
  mongo_db:
    image: mongo:latest
    restart: always
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 10s
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
      - MONGO_USER=${MONGO_DB_USER}
      - MONGO_PWD=${MONGO_DB_PWD}
      - MONGO_NAME=${MONGO_DB_NAME}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo_data:/data/${MONGO_DB_NAME}
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - mongo_network

  backend:
    restart: always
    depends_on:
      mongo_db:
        condition: service_healthy
    build:
      dockerfile: Dockerfile
      context: ./backendA
    ports:
      - "${BACKEND_PORT}:5040"
    environment:
      - FRONTEND_URL=${APP_BASE_URL}:${FRONTEND_PORT}
      - MONGO_URL='mongodb://mongo_db:${MONGO_PORT}'
      - MONGO_USER=${MONGO_DB_USER}
      - MONGO_PASS=${MONGO_DB_PWD}
      - MONGO_ROOT_USER=${MONGO_ADMIN}
      - MONGO_ROOT_PWD=${MONGO_PASSWORD}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
    networks:
      - mongo_network
    stdin_open: true


  frontend:
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    build:
      dockerfile: Dockerfile
      context: ./frontendA
    environment:
      - REACT_APP_BACKEND_URL=${APP_BASE_URL}:${BACKEND_PORT}
    stdin_open: true
